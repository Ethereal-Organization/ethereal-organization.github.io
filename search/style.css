body {
  background: linear-gradient(180deg, #000000 0%, #050505 100%);
  color: #c9d1d9;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  padding: 20px;
  max-width: 95%;
  margin: auto;
  overflow-y: scroll;
  scrollbar-color: #30363d #0d1117;
  scrollbar-width: thin;
  font-weight: 400 !important;
}

body > *:not(footer) {
  flex: 1 0 auto; /* Make main content grow */
}

body::-webkit-scrollbar {
  width: 8px;
}

body::-webkit-scrollbar-thumb {
  background-color: #30363d;
  border-radius: 4px;
}

header {
  margin-bottom: 20px;
  padding: 30px 25px;
  background: url("https://raw.githubusercontent.com/Ethereal-Organization/.github/7bbe128d0eb4f896e0f5e8986117a78881537cb8/ota.png") no-repeat left center;
  background-size: contain;
  color: white;
  font-size: 1.5rem;
  font-weight: 700;
  border-radius: 8px;
  text-align: center;
  user-select: none;
  position: relative;
  min-height: 120px;
  box-shadow: inset 0 0 30px rgba(0,0,0,0.7), 0 4px 12px rgba(0,0,0,0.4);
}

/* Optional: add a subtle dark overlay to make text more readable */
header::before {
  content: "";
  position: absolute;
  top: 0; left: 0; right: 0; bottom: 0;
  background: rgba(0, 0, 0, 0);
  border-radius: 8px;
  z-index: 0;
}

header h1, header p {
  position: relative;
  z-index: 1;
  margin: 0;
}

header h1 {
  color: #58a6ff;
  margin-bottom: 5px;
  font-size: 28px;
  font-weight: 700;
  text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.7);
}

p {
  color: #8b949e;
  font-weight: 300;
}

#searchBar {
  position: sticky;
  top: 0;
  z-index: 10;
  width: 100%;
  padding: 10px;
  background-color: #161b22;
  border: 1px solid #30363d;
  border-radius: 6px;
  color: #c9d1d9;
  margin-bottom: 20px;
  font-size: 16px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
}

.explorer {
  font-size: 15px;
  line-height: 1.8;
}

.folder, .file {
  display: flex;
  align-items: center;
  padding: 6px 10px;
  border-radius: 6px;
  transition: transform 0.1s ease, box-shadow 0.3s ease, background-color 0.3s ease;
  white-space: nowrap;
  cursor: pointer;
  position: relative;
}

.folder:hover, .file:hover {
  background-color: #2c323c;
  transform: translateX(4px);
  box-shadow: 0 0 8px #58a6ff88;
}

.folder:active, .file:active {
  transform: scale(0.98);
}

.icon {
  margin-right: 8px;
  width: 20px;
  text-align: center;
  flex-shrink: 0;
  color: #8b949e;
  transition: color 0.3s ease;
}

.folder:hover .icon, .file:hover .icon {
  color: #58a6ff;
}

.nested {
  margin-left: 20px;
  border-left: 1px dashed #30363d;
  padding-left: 10px;
  margin-top: 4px;
  transition: all 0.3s ease-in-out;
}

.spinner {
  border: 4px solid #30363d;
  border-top: 4px solid #58a6ff;
  border-radius: 50%;
  width: 30px;
  height: 30px;
  animation: spin 1s linear infinite;
  margin: 0 auto 20px;
  display: none;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.powered{
    text-align: right;
    height: 1.0em;    /* Adjust size to fit nicely with text */
}
.project {
  display: block;      /* make it a block-level element */
  margin-left: auto;   /* push it all the way to the right */
  height: 1.5em;       /* adjust size */
}
.filename {
  display: inline-flex;
  align-items: center;
  gap: 6px; /* spacing between filename text and file-extension */
}

.file-extension {
  /* Try pushing it right using margin-left auto */
  margin-left: auto;

  /* If container isn't flex, fallback with absolute positioning */
  position: relative; /* make it a positioning context */

  /* Set font and styling */
  font-weight: 600;
  color: #60a5fa;
  background-color: rgba(37, 99, 235, 0.1);
  padding: 2px 6px;
  border-radius: 6px;
  user-select: none;
  white-space: nowrap;
  transition: background-color 0.3s ease;

  /* Add inline-flex so contents center nicely */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  
  /* Try text alignment */
  text-align: right;

  /* If flex container doesn't work, try absolute right */
  right: 0;
  left: auto;

  /* Just in case, set max-width so it won't overflow */
  max-width: 100%;
}

/* If parent is NOT flex, use absolute positioning to pin right */
.file {
  position: relative; /* parent for absolute children */
}

.file-extension {
  position: absolute;
  right: 10px; /* adjust as needed */
  top: 50%;
  transform: translateY(-50%);
}

.file-extension:hover {
  background-color: rgba(37, 99, 235, 0.3);
}

/* Custom extension badge aligned right */
.custom-ext {
  margin-left: auto;
  position: absolute;
  right: 100px;       /* offset to the left of file-extension; adjust as needed */
  top: 50%;
  transform: translateY(-50%);
  font-weight: 600;
  color: #60a5fa;
  background-color: rgba(37, 99, 235, 0.1);
  padding: 2px 6px;
  border-radius: 6px;
  user-select: none;
  white-space: nowrap;
  transition: background-color 0.3s ease;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-align: right;
}
a{
animation: unlinks 0.5s forwards;
}
a:hover{
  animation: links 0.5s forwards;
}

@keyframes links {
  0% {
    color: #58a6ff;
  }
  100%{
    color: #ffffff;
  }
}
@keyframes unlinks {
  100% {
    color: #58a6ff;
  }
  0%{
    color: #ffffff;
  }
}
h3{
  text-align: center;
}
